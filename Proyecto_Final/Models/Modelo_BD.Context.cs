//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Final.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestEntities : DbContext
    {
        public TestEntities()
            : base("name=TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FACTURA> FACTURA { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<PROVEEDOR> PROVEEDOR { get; set; }
        public virtual DbSet<TIENDA> TIENDA { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
    
        public virtual ObjectResult<sp_BuscaFactura_Result> sp_BuscaFactura(string nombreEmpresa)
        {
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("nombreEmpresa", nombreEmpresa) :
                new ObjectParameter("nombreEmpresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscaFactura_Result>("sp_BuscaFactura", nombreEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_BuscaProducto_Result> sp_BuscaProducto(string nombreProducto)
        {
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("nombreProducto", nombreProducto) :
                new ObjectParameter("nombreProducto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscaProducto_Result>("sp_BuscaProducto", nombreProductoParameter);
        }
    
        public virtual ObjectResult<sp_BuscaProveedor_Result> sp_BuscaProveedor(string nombreProveedor)
        {
            var nombreProveedorParameter = nombreProveedor != null ?
                new ObjectParameter("nombreProveedor", nombreProveedor) :
                new ObjectParameter("nombreProveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscaProveedor_Result>("sp_BuscaProveedor", nombreProveedorParameter);
        }
    
        public virtual int sp_EliminaFacturas(Nullable<int> factura)
        {
            var facturaParameter = factura.HasValue ?
                new ObjectParameter("Factura", factura) :
                new ObjectParameter("Factura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaFacturas", facturaParameter);
        }
    
        public virtual int sp_EliminaProducto(Nullable<int> codigoProducto)
        {
            var codigoProductoParameter = codigoProducto.HasValue ?
                new ObjectParameter("codigoProducto", codigoProducto) :
                new ObjectParameter("codigoProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaProducto", codigoProductoParameter);
        }
    
        public virtual int sp_EliminaProveedor(Nullable<int> codigoProveedor)
        {
            var codigoProveedorParameter = codigoProveedor.HasValue ?
                new ObjectParameter("codigoProveedor", codigoProveedor) :
                new ObjectParameter("codigoProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaProveedor", codigoProveedorParameter);
        }
    
        public virtual int sp_EliminaUsuario(Nullable<int> usuario)
        {
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaUsuario", usuarioParameter);
        }
    
        public virtual int sp_InsertaFactura(Nullable<int> idFacturas, string codigo, string empresa, Nullable<decimal> totalCompra, string fechaCompra, Nullable<int> tienda)
        {
            var idFacturasParameter = idFacturas.HasValue ?
                new ObjectParameter("IdFacturas", idFacturas) :
                new ObjectParameter("IdFacturas", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var totalCompraParameter = totalCompra.HasValue ?
                new ObjectParameter("TotalCompra", totalCompra) :
                new ObjectParameter("TotalCompra", typeof(decimal));
    
            var fechaCompraParameter = fechaCompra != null ?
                new ObjectParameter("FechaCompra", fechaCompra) :
                new ObjectParameter("FechaCompra", typeof(string));
    
            var tiendaParameter = tienda.HasValue ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaFactura", idFacturasParameter, codigoParameter, empresaParameter, totalCompraParameter, fechaCompraParameter, tiendaParameter);
        }
    
        public virtual int sp_InsertaProducto(Nullable<int> idProducto, string nombre, Nullable<decimal> precioCompra, Nullable<decimal> precioVenta, Nullable<int> tienda)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioCompraParameter = precioCompra.HasValue ?
                new ObjectParameter("PrecioCompra", precioCompra) :
                new ObjectParameter("PrecioCompra", typeof(decimal));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("PrecioVenta", precioVenta) :
                new ObjectParameter("PrecioVenta", typeof(decimal));
    
            var tiendaParameter = tienda.HasValue ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaProducto", idProductoParameter, nombreParameter, precioCompraParameter, precioVentaParameter, tiendaParameter);
        }
    
        public virtual int sp_InsertaProveedor(Nullable<int> idProveedor, string nombre, string correo, string telefono, string direccion, Nullable<int> tienda)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var tiendaParameter = tienda.HasValue ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaProveedor", idProveedorParameter, nombreParameter, correoParameter, telefonoParameter, direccionParameter, tiendaParameter);
        }
    
        public virtual int sp_InsertaUsuario(Nullable<int> idUsuario, string nombre, string apellido, string usuario, string contrasena, Nullable<int> tienda)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var tiendaParameter = tienda.HasValue ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaUsuario", idUsuarioParameter, nombreParameter, apellidoParameter, usuarioParameter, contrasenaParameter, tiendaParameter);
        }
    
        public virtual ObjectResult<sp_MuestraFacturas_Result> sp_MuestraFacturas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MuestraFacturas_Result>("sp_MuestraFacturas");
        }
    
        public virtual ObjectResult<sp_MuestraProductos_Result> sp_MuestraProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MuestraProductos_Result>("sp_MuestraProductos");
        }
    
        public virtual ObjectResult<sp_MuestraProveedor_Result> sp_MuestraProveedor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MuestraProveedor_Result>("sp_MuestraProveedor");
        }
    
        public virtual ObjectResult<sp_MuestraTiendas_Result> sp_MuestraTiendas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MuestraTiendas_Result>("sp_MuestraTiendas");
        }
    
        public virtual int sp_UpdateProducto(Nullable<int> idProducto, string nombre, Nullable<decimal> precioCompra, Nullable<decimal> precioVenta, Nullable<int> tienda)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioCompraParameter = precioCompra.HasValue ?
                new ObjectParameter("PrecioCompra", precioCompra) :
                new ObjectParameter("PrecioCompra", typeof(decimal));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("PrecioVenta", precioVenta) :
                new ObjectParameter("PrecioVenta", typeof(decimal));
    
            var tiendaParameter = tienda.HasValue ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProducto", idProductoParameter, nombreParameter, precioCompraParameter, precioVentaParameter, tiendaParameter);
        }
    
        public virtual int sp_UpdateProveedor(Nullable<int> idProveedor, string nombre, string correo, string telefono, string direccion, Nullable<int> tienda)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var tiendaParameter = tienda.HasValue ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProveedor", idProveedorParameter, nombreParameter, correoParameter, telefonoParameter, direccionParameter, tiendaParameter);
        }
    }
}
